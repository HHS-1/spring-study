<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!-- 
	Spring은 기본으로 MVC 형태의 web프레임워크 이므로
	beans : 의존성 여부를 체크하는 소스코드
	context(class), mvc(jsp로 출력하는 형태)
 -->

<!-- @를 일반 class 파일에 사용할 수 있도록 하겠다 -->
<annotation-driven></annotation-driven>
<!-- 모든 파일을 사용할 수 있도록 적용 단, resources에 특정 파일 적용시 해당 파일 속성만 적용됩니다.  ex)mapping="/*.jsp" -->
<resources location="/" mapping="/**"></resources>
<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- prefix : view페이지를 보여줄 경로, suffix : view 페이지 파일 속성명 -->
	<beans:property name="prefix" value="/"></beans:property>
	<beans:property name="suffix" value=".jsp"></beans:property>

</beans:bean>
<!--  class를 로드하는 부분(Controller) -->
<beans:bean class="webspring.mainpage"></beans:bean>
<beans:bean class="webspring.mainpage2"></beans:bean>
</beans:beans>
