<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>webspring</display-name>
  <!-- web @(Controller)를 사용하기 위한 xml 로드 파일 구현
  	servlet에서는 do를 생성하기 위해서 지속적으로 태그를 사용했지만,
  	spring에서는 bean에서 관리하도록 변환됨
   -->
 	<servlet>
	 	<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  <!-- 해당 라이브러리를 이용해서 dispatcher로 bean으로 사용할게, servlet 안 하고 spring 할게 -->
		<init-param>
		<param-name>contextConfigLocation</param-name>
		<!--  Controller 있는 xml 파트 -->
		<param-value>
		<!-- STS3 -->
		 /WEB-INF/webpage.xml
		 /WEB-INF/dbconfig.xml
		<!-- STS2 -->
		<!-- /WEB-INF/webpage2.xml -->
		<!-- STS1 -->
		</param-value>
		</init-param>
		<!-- param-value에 사용되는 XML 파일을 첫번째로 읽어서 사용 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- 보안 맵핑을 사용(view) 출력 형태
	url-pattern : /(webapp에서 jsp를 실행가능) 또는 /* (webapp에서 jsp 실행불가능, do등이 먼저 작동 되어야 함(dispatcher, 보안))
	기본은 jsp파일을 로드 가능, HTML은 spring에서 로드 불가능
	 -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 언어셋 세팅 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>